// Example usage of BlackBox AI Integration in Circular/Public
import { BlackBoxAIIntegration } from './index';

async function example() {
  // Initialize the integration
  BlackBoxAIIntegration.initialize(process.env.CONVEX_URL || 'http://localhost:3210');

  // Process a development ticket
  try {
    const result = await BlackBoxAIIntegration.processTicket(
      {
        title: "Add user authentication to Circular",
        description: "Implement JWT-based authentication with login/logout functionality",
        repositoryUrl: "https://github.com/funfake/circular",
        priority: "high"
      },
      {
        owner: "funfake",
        name: "circular", 
        accessToken: "ghp_your_github_token",
        defaultBranch: "main"
      }
    );

    console.log("Ticket processing started:", result.ticket._id);
    console.log("Task ID:", result.task._id);

    // Poll for completion
    let task = result.task;
    while (task.status !== "completed" && task.status !== "failed") {
      await new Promise(resolve => setTimeout(resolve, 5000)); // Wait 5 seconds
      task = await BlackBoxAIIntegration.getTaskStatus(task._id);
      console.log("Task status:", task.status);
    }

    if (task.status === "completed") {
      // Create pull request
      const pr = await BlackBoxAIIntegration.createPullRequest(
        task._id,
        result.ticket.userId,
        {
          title: "ðŸ¤– AI-Generated: Add User Authentication",
          description: "This PR was generated by BlackBox AI based on the development ticket."
        }
      );

      console.log("Pull request created:", pr.pullRequestUrl);
    } else {
      console.error("Task failed:", task.errorMessage);
    }

  } catch (error) {
    console.error("Integration failed:", error);
  }
}

// Export for use in other parts of the application
export { example };
