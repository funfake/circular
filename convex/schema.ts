import { defineSchema, defineTable } from "convex/server";
import { v } from "convex/values";

export default defineSchema({
  // we fetch the tickets from Jira
  // if new:
  // 1. create a new ticket
  // 2. analyze the ticket
  // if content is not enough, we reject the ticket (return)
  // if ticket is accepted
  // 3. split the ticket into jobs
  // each job has a title, description, and link to the ticket
  tickets: defineTable({
    jiraTitle: v.string(),
    jiraDescription: v.string(),
    jiraId: v.string(),
    rejected: v.boolean(),
  }),

  jobs: defineTable({
    ticketId: v.id("tickets"),
    title: v.string(), // generated by the LLM
    tasks: v.string(), // generated by the LLM, list of tasks and sub-tasks
    // if not auto, the user needs to verify the job before it starts
    verifiedAt: v.number(), // timestamp when the job is verified by the pm (created ts is set by convex automatically)
    // coding agent fields
    prId: v.string(), // github pull request id
    finishedAt: v.number(), // timestamp when the job is finished (created ts is set by convex automatically)
  }),

  credentials: defineTable({
    repositoryId: v.id("repositories"),
    jiraToken: v.string(),
    githubToken: v.string(),
  }),
});
